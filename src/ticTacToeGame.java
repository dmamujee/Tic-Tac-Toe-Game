/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author David Mamujee
 * Date: November 14, 2012
 * Description: A program that lets the user play the game Tic-Tac-Toe
 */

public class ticTacToeGame extends javax.swing.JFrame {

    //Creates global variables that can be accessed anywhere in the program
    private static 
            //Initializes counter variables that are used to keep track of moves
            //and whose turn it is
            int counter = 0, turn = 1;
    //Initializes variables that will be used to represent each square and each
    //player's wins
    int Aa,Ab,Ac,Ba,Bb,Bc,Ca,Cb,Cc;
    int player1Wins = 0,player2Wins = 0;
    //Initializes player's names variables and gives them a name incase user
    //doesn't enter names
    String player1 = "Player 1", player2 = "Player 2";
    
        
    public ticTacToeGame() {
        initComponents();
    }               
            

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonAa = new javax.swing.JButton();
        buttonAb = new javax.swing.JButton();
        buttonBb = new javax.swing.JButton();
        buttonCb = new javax.swing.JButton();
        buttonBc = new javax.swing.JButton();
        buttonBa = new javax.swing.JButton();
        buttonAc = new javax.swing.JButton();
        buttonCa = new javax.swing.JButton();
        buttonCc = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        turnOutput = new javax.swing.JLabel();
        horizontalLine1 = new javax.swing.JLabel();
        horizontalLine2 = new javax.swing.JLabel();
        verticalLine1 = new javax.swing.JLabel();
        verticalLine2 = new javax.swing.JLabel();
        player1Input = new javax.swing.JTextField();
        player2Input = new javax.swing.JTextField();
        nameButton = new javax.swing.JButton();
        promptLabel = new javax.swing.JLabel();
        player1PromtLabel = new javax.swing.JLabel();
        player2PromptLabel = new javax.swing.JLabel();
        scoreboardTitleLabel = new javax.swing.JLabel();
        player1ScoreboardOutput = new javax.swing.JLabel();
        player2ScoreboardOutput = new javax.swing.JLabel();
        player1ScoreOutput = new javax.swing.JLabel();
        player2ScoreOutput = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonAa.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonAa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAaActionPerformed(evt);
            }
        });
        getContentPane().add(buttonAa, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 70, 60));

        buttonAb.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonAb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAbActionPerformed(evt);
            }
        });
        getContentPane().add(buttonAb, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 70, 60));

        buttonBb.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonBb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBbActionPerformed(evt);
            }
        });
        getContentPane().add(buttonBb, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 70, 60));

        buttonCb.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCbActionPerformed(evt);
            }
        });
        getContentPane().add(buttonCb, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 70, 60));

        buttonBc.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonBc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBcActionPerformed(evt);
            }
        });
        getContentPane().add(buttonBc, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 70, 60));

        buttonBa.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonBa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBaActionPerformed(evt);
            }
        });
        getContentPane().add(buttonBa, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 70, 60));

        buttonAc.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonAc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAcActionPerformed(evt);
            }
        });
        getContentPane().add(buttonAc, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 70, 60));

        buttonCa.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCaActionPerformed(evt);
            }
        });
        getContentPane().add(buttonCa, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 70, 60));

        buttonCc.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        buttonCc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCcActionPerformed(evt);
            }
        });
        getContentPane().add(buttonCc, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 70, 60));

        resetButton.setText("Reset the Board");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        turnOutput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        turnOutput.setText("It is Player 1's turn");
        getContentPane().add(turnOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 240, 30));

        horizontalLine1.setBackground(new java.awt.Color(0, 0, 0));
        horizontalLine1.setText("jLabel3");
        horizontalLine1.setOpaque(true);
        getContentPane().add(horizontalLine1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 104, 250, 10));

        horizontalLine2.setBackground(new java.awt.Color(0, 0, 0));
        horizontalLine2.setText("jLabel4");
        horizontalLine2.setOpaque(true);
        getContentPane().add(horizontalLine2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 184, 250, 10));

        verticalLine1.setBackground(new java.awt.Color(0, 0, 0));
        verticalLine1.setOpaque(true);
        getContentPane().add(verticalLine1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 10, 220));

        verticalLine2.setBackground(new java.awt.Color(0, 0, 0));
        verticalLine2.setText(" ");
        verticalLine2.setOpaque(true);
        getContentPane().add(verticalLine2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 10, 220));

        player1Input.setText("Player 1");
        getContentPane().add(player1Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 140, -1));

        player2Input.setText("Player 2");
        getContentPane().add(player2Input, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 140, -1));

        nameButton.setText("Enter");
        nameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameButtonActionPerformed(evt);
            }
        });
        getContentPane().add(nameButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, -1, -1));

        promptLabel.setText("Please enter name of players then press Enter");
        getContentPane().add(promptLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        player1PromtLabel.setText("Player 1 (X):");
        getContentPane().add(player1PromtLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, -1, -1));

        player2PromptLabel.setText("Player 2 (O):");
        getContentPane().add(player2PromptLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, -1, -1));

        scoreboardTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        scoreboardTitleLabel.setText("Scoreboard");
        getContentPane().add(scoreboardTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, -1, -1));

        player1ScoreboardOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1ScoreboardOutput.setText("Player 1");
        getContentPane().add(player1ScoreboardOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 90, -1));

        player2ScoreboardOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2ScoreboardOutput.setText("Player 2");
        getContentPane().add(player2ScoreboardOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, 90, -1));

        player1ScoreOutput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        player1ScoreOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1ScoreOutput.setText("0");
        getContentPane().add(player1ScoreOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 40, -1));

        player2ScoreOutput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        player2ScoreOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2ScoreOutput.setText("0");
        getContentPane().add(player2ScoreOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, 50, -1));

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 80, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAaActionPerformed
        //Locks Button from being clicked again
        buttonAa.setEnabled(false);
        
        //Executes this code if it is Player 1's turn
        if (turn == 1)
        {                
            //Sets text on button for user as "X" and stores that Player 1 chose
            //this button
            buttonAa.setText("X");
            Aa = 1;
            
            //Makes it now Player 2's turn and displays text to user telling
            //them this information
            turn = 2;
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        //Executes this code if it is Player 2's turn
        else if (turn == 2)
        {
            //Sets text on button for user as "O" and stores that Player 2 chose
            //this button           
            buttonAa.setText("O");
            Aa = 4;
            
            //Makes it now Player 1's turn and displays text to user telling
            //them this information
            turn = 1;
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        //Increases counter variable by one, which is used to determine draws.
        counter++;              
                
        //Checks to see if Player 1 has won
        if ((Aa+Ab+Ac==3)||(Aa+Ba+Ca==3)||(Aa+Bb+Cc==3))
        {
            //Displays text telling user Player 1 has won
            turnOutput.setText(player1 + " has won!");
            
            //Increases Player 1 wins by one and displays new score to user
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            //Locks all other buttons
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        //Checks to see if Player 2 has won
        else if ((Aa+Ab+Ac==12)||(Aa+Ba+Ca==12)||(Aa+Bb+Cc==12))
        {
            //Displays text telling user Player 2 has won
            turnOutput.setText(player2 + " has won!");
            
            //Increases Player 2 wins by one and displays new score to user
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            //Locks all other buttons
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        //If neither player has won and 9 moves have occured, it is a Draw
        else if (counter == 9)
        {
            //Displays text telling user that it is a Draw
            turnOutput.setText("Draw!");
        }     
        
        
    }//GEN-LAST:event_buttonAaActionPerformed

    private void buttonAbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAbActionPerformed
        buttonAb.setEnabled(false);
        
        if (turn == 1)
        {                       
            buttonAb.setText("X");
            Ab = 1;
            turn = 2;
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        else if (turn == 2)
        {                       
            buttonAb.setText("O");
            Ab = 4;
            turn = 1; 
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        counter++;        
        
        if ((Ab+Aa+Ac==3)||(Ab+Bb+Cb==3))
        {
            turnOutput.setText(player1 + " has won!");
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            buttonAa.setEnabled(false);            
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if ((Ab+Aa+Ac==12)||(Ab+Bb+Cb==12))
        {
            turnOutput.setText(player2 + " has won!");
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            buttonAa.setEnabled(false);            
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if (counter == 9)
        {
            turnOutput.setText("Draw!");
        }
        
    }//GEN-LAST:event_buttonAbActionPerformed

    private void buttonAcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAcActionPerformed
        buttonAc.setEnabled(false);
        
        if (turn == 1)
        {                       
            buttonAc.setText("X");
            Ac = 1;
            turn = 2; 
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        else if (turn == 2)
        {                        
            buttonAc.setText("O");
            Ac = 4;
            turn = 1;
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        counter++;        
        
        if ((Ac+Aa+Ab==3)||(Ac+Bc+Cc==3)||(Ac+Bb+Ca==3))
        {
            turnOutput.setText(player1 + " has won!");
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);            
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if ((Ac+Aa+Ab==12)||(Ac+Bc+Cc==12)||(Ac+Bb+Ca==12))
        {
            turnOutput.setText(player2 + " has won!");
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);            
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if (counter == 9)
        {
            turnOutput.setText("Draw!");
        }
        
        
    }//GEN-LAST:event_buttonAcActionPerformed

    private void buttonBaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBaActionPerformed
        buttonBa.setEnabled(false);
        
        if (turn == 1)
        {                        
            buttonBa.setText("X");
            Ba = 1;
            turn = 2;
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        else if (turn == 2)
        {                       
            buttonBa.setText("O");
            Ba = 4;
            turn = 1; 
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        counter++;        
        
        if ((Ba+Bb+Bc==3)||(Ba+Aa+Ca==3))
        {
            turnOutput.setText(player1 + " has won!");
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);            
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if ((Ba+Bb+Bc==12)||(Ba+Aa+Ca==12))
        {
            turnOutput.setText(player2 + " has won!");
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);            
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if (counter == 9)
        {
            turnOutput.setText("Draw!");
        }        
        
    }//GEN-LAST:event_buttonBaActionPerformed

    private void buttonBbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBbActionPerformed
        buttonBb.setEnabled(false);
        
        if (turn == 1)
        {                        
            buttonBb.setText("X");
            Bb = 1;
            turn = 2;
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        else if (turn == 2)
        {                        
            buttonBb.setText("O");
            Bb = 4;
            turn = 1;
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        counter++;        
        
        if ((Bb+Ab+Cb==3)||(Bb+Ba+Bc==3)||(Bb+Aa+Cc==3)||(Bb+Ca+Ac==3))
        {
            turnOutput.setText(player1 + " has won!");
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);            
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if ((Bb+Ab+Cb==12)||(Bb+Ba+Bc==12)||(Bb+Aa+Cc==12)||(Bb+Ca+Ac==12))
        {
            turnOutput.setText(player2 + " has won!");
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);            
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if (counter == 9)
        {
            turnOutput.setText("Draw!");
        }
        
    }//GEN-LAST:event_buttonBbActionPerformed

    private void buttonBcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBcActionPerformed
        buttonBc.setEnabled(false);
        
        if (turn == 1)
        {                        
            buttonBc.setText("X");
            Bc = 1;
            turn = 2;
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        else if (turn == 2)
        {                        
            buttonBc.setText("O");
            Bc = 4;
            turn = 1;
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        counter++;        
        
        if ((Bc+Ac+Cc==3)||(Bc+Ba+Bb==3))
        {
            turnOutput.setText(player1 + " has won!");
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);            
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if ((Bc+Ac+Cc==12)||(Bc+Ba+Bb==12))
        {
            turnOutput.setText(player2 + " has won!");
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);            
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if (counter == 9)
        {
            turnOutput.setText("Draw!");
        }
        
    }//GEN-LAST:event_buttonBcActionPerformed

    private void buttonCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCaActionPerformed
        buttonCa.setEnabled(false);
        
        if (turn == 1)
        {                        
            buttonCa.setText("X");
            Ca = 1;
            turn = 2;
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        else if (turn == 2)
        {                        
            buttonCa.setText("O");
            Ca = 4;
            turn = 1;
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        counter++;        
        
        if ((Ca+Cb+Cc==3)||(Ca+Aa+Ba==3)||(Ca+Bb+Ac==3))
        {
            turnOutput.setText(player1 + " has won!");
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);            
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if ((Ca+Cb+Cc==12)||(Ca+Aa+Ba==12)||(Ca+Bb+Ac==12))
        {
            turnOutput.setText(player2 + " has won!");
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);            
            buttonCb.setEnabled(false);
            buttonCc.setEnabled(false);
        }
        
        else if (counter == 9)
        {
            turnOutput.setText("Draw!");
        }
        
    }//GEN-LAST:event_buttonCaActionPerformed

    private void buttonCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCbActionPerformed
        buttonCb.setEnabled(false);
        
        if (turn == 1)
        {                        
            buttonCb.setText("X");
            Cb = 1;
            turn = 2;
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        else if (turn == 2)
        {                        
            buttonCb.setText("O");
            Cb = 4;
            turn = 1;
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        counter++;        
        
        if ((Cb+Ca+Cc==3)||(Cb+Ab+Bb==3))
        {
            turnOutput.setText(player1 + " has won!");
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);            
            buttonCc.setEnabled(false);
        }
        
        else if ((Cb+Ca+Cc==12)||(Cb+Ab+Bb==12))
        {
            turnOutput.setText(player2 + " has won!");
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);            
            buttonCc.setEnabled(false);
        }
        
        else if (counter == 9)
        {
            turnOutput.setText("Draw!");
        }
        
    }//GEN-LAST:event_buttonCbActionPerformed

    private void buttonCcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCcActionPerformed
        buttonCc.setEnabled(false);
        
        if (turn == 1)
        {                       
            buttonCc.setText("X");
            Cc = 1;
            turn = 2;
            turnOutput.setText("It is " + player2 + "'s turn");
        }
        
        else if (turn == 2)
        {                        
            buttonCc.setText("O");
            Cc = 4;
            turn = 1;
            turnOutput.setText("It is " + player1 + "'s turn");
        }
        
        counter++;        
        
        if ((Cc+Ca+Cb==3)||(Cc+Ac+Bc==3)||(Cc+Bb+Aa==3))
        {
            turnOutput.setText(player1 + " has won!");
            player1Wins++;
            player1ScoreOutput.setText(player1Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);            
        }
        
        else if ((Cc+Ca+Cb==12)||(Cc+Ac+Bc==12)||(Cc+Bb+Aa==12))
        {
            turnOutput.setText(player2 + " has won!");
            player2Wins++;
            player2ScoreOutput.setText(player2Wins+"");
            
            buttonAa.setEnabled(false);
            buttonAb.setEnabled(false);
            buttonAc.setEnabled(false);
            buttonBa.setEnabled(false);
            buttonBb.setEnabled(false);
            buttonBc.setEnabled(false);
            buttonCa.setEnabled(false);
            buttonCb.setEnabled(false);            
        }
        
        else if (counter == 9)
        {
            turnOutput.setText("Draw!");
        }
        
    }//GEN-LAST:event_buttonCcActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        //Unlocks all buttons
        buttonAa.setEnabled(true);
        buttonAb.setEnabled(true);
        buttonAc.setEnabled(true);
        buttonBa.setEnabled(true);
        buttonBb.setEnabled(true);
        buttonBc.setEnabled(true);
        buttonCa.setEnabled(true);
        buttonCb.setEnabled(true);
        buttonCc.setEnabled(true);
        
        //Makes all button's text blank
        buttonAa.setText("");
        buttonAb.setText("");
        buttonAc.setText("");
        buttonBa.setText("");
        buttonBb.setText("");
        buttonBc.setText("");
        buttonCa.setText("");
        buttonCb.setText("");
        buttonCc.setText("");
        
        //Makes the moves counter 0 again, and makes it Player 1's turn, and
        //tells user this.
        counter = 0;
        turn = 1;
        turnOutput.setText("It is " + player1 + "'s turn");
        //Assigns values of each square back 0 to reset board
        Aa = Ab = Ac = Ba = Bb = Bc = Ca = Cb = Cc = 0;               
                
    }//GEN-LAST:event_resetButtonActionPerformed

    private void nameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameButtonActionPerformed
        //Retreives player's names and stores them as variables
        player1 = player1Input.getText();
        player2 = player2Input.getText();
        
        //Displays player's names in scoreboard
        player1ScoreboardOutput.setText(player1);
        player2ScoreboardOutput.setText(player2);             
        
        //Says whose turn it is using players names. This is here just incase 
        //user inserts names mid-game.
        if (turn == 1)
        {
           turnOutput.setText("It is " + player1 + "'s turn"); 
        }
        if (turn == 2)
        {
            turnOutput.setText("It is " + player2 + "'s turn");
        }            
        
        
    }//GEN-LAST:event_nameButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        //Makes the program window close
        System.exit(0);
        
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ticTacToeGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ticTacToeGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ticTacToeGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ticTacToeGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ticTacToeGame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAa;
    private javax.swing.JButton buttonAb;
    private javax.swing.JButton buttonAc;
    private javax.swing.JButton buttonBa;
    private javax.swing.JButton buttonBb;
    private javax.swing.JButton buttonBc;
    private javax.swing.JButton buttonCa;
    private javax.swing.JButton buttonCb;
    private javax.swing.JButton buttonCc;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel horizontalLine1;
    private javax.swing.JLabel horizontalLine2;
    private javax.swing.JButton nameButton;
    private javax.swing.JTextField player1Input;
    private javax.swing.JLabel player1PromtLabel;
    private javax.swing.JLabel player1ScoreOutput;
    private javax.swing.JLabel player1ScoreboardOutput;
    private javax.swing.JTextField player2Input;
    private javax.swing.JLabel player2PromptLabel;
    private javax.swing.JLabel player2ScoreOutput;
    private javax.swing.JLabel player2ScoreboardOutput;
    private javax.swing.JLabel promptLabel;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel scoreboardTitleLabel;
    private javax.swing.JLabel turnOutput;
    private javax.swing.JLabel verticalLine1;
    private javax.swing.JLabel verticalLine2;
    // End of variables declaration//GEN-END:variables
}
